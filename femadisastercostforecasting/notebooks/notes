Modeling Notes

Goal: predict totaldisastercost of FEMA for their fiscal year 2025
Import Libraries
Import Data
Review model types
Choose 2-3 models
Feature engineering
Additional EDA
Hyperparameter tuning
Fit models to training data set
Transform Train and Test sets (but don't fit to Test or else data leakage)
Evaluate models...
	Classification - accuracy, recall, precision, and F1
	Regression - MSE, MAE, R^2
	(References)	
	https://medium.com/analytics-vidhya/complete-guide-to-machine-learning-evaluation-metrics-615c2864d916
	https://machinelearningmastery.com/metrics-evaluate-machine-learning-algorithms-python/

DQ checks
---------
is femaDatacleanV4.totalDisasterCostcorrect?
is femaAnnualStats.totalDisasterCost correct?
any data leakage (from X <> y) during or after train/test split?
any columns accidentally copied over to other columns?
for linear regression, any multi-colinearity? If so, remove the columns from data set that are least important of any collinear pair
    run a correlation matrix on the dollar amount funded fields. columns > .8 should be removed
spot check fishy values (negatives, possible duplicates) 
addiotnal ref: https://www.statisticssolutions.com/free-resources/directory-of-statistical-analyses/assumptions-of-linear-regression/


EDA steps
df.corr() - textual correlation
sns.pairplot(df)
sns.heatmap(df.corr())
sns.scatter(data=df, x='independent', y='dependent variable')
sns.regplot(data=df, x='independent', y='dependent variable')


Feature Selection: Use techniques like stepwise regression, LASSO/Ridge, or feature importance scores to identify the most impactful features.   
Dimensionality Reduction: Techniques like PCA can reduce the number of features while preserving important information.

   


#model eval stats
modelVariable.summary()